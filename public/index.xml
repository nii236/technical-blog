<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A Blog</title>
    <link>http://nii236.github.io/technical-blog/index.xml</link>
    <description>Recent content on A Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Dec 2016 09:17:28 +0800</lastBuildDate>
    <atom:link href="http://nii236.github.io/technical-blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Swinging Jazz</title>
      <link>http://nii236.github.io/technical-blog/post/2016-12-02-swinging-jazz/</link>
      <pubDate>Fri, 02 Dec 2016 09:17:28 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-12-02-swinging-jazz/</guid>
      <description>&lt;p&gt;So I had a piano lesson today.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been learning Charlie Parker&amp;rsquo;s &amp;ldquo;Dexterity&amp;rdquo; for the past few weeks.&lt;/p&gt;

&lt;p&gt;Some interesting points follow.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;comping-yourself&#34;&gt;Comping yourself&lt;/h1&gt;

&lt;p&gt;With chords in bebop, the tempos are usually too fast to be able to play two handed chords. Keep it to simple Bud Powell voicings.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Root and 7&lt;/li&gt;
&lt;li&gt;Root and 3&lt;/li&gt;
&lt;li&gt;3 and 7. Only for dominant chords, otherwise it will sound like a different chord&lt;/li&gt;
&lt;li&gt;7 and 3. Only for dominant chords, otherwise it will sound like a different chord&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chordal expectation is a thing. Hit chords either after or before beat 3 depending on what the melody is doing.&lt;/p&gt;

&lt;h1 id=&#34;the-tune&#34;&gt;The tune&lt;/h1&gt;

&lt;p&gt;Very quick, I need to work on my timing.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It helps to be able to count in 8ths to be able to fit the weird semi quaver rhythms.&lt;/li&gt;
&lt;li&gt;Play along with the recordings.&lt;/li&gt;
&lt;li&gt;End of A section semi quavers is off beat&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;swinging-not&#34;&gt;Swinging (not)&lt;/h1&gt;

&lt;p&gt;No swing! Bebop tunes don&amp;rsquo;t swing! Only swing jazz swings.&lt;/p&gt;

&lt;p&gt;The swing feel is achieved
- The drums
- The accenting on the offbeats&lt;/p&gt;

&lt;p&gt;The melodic interest is generated through:
- Random accents
- Reduction of the melody
- Incredible tempo&lt;/p&gt;

&lt;p&gt;Play the melody rock solid straight. No exceptions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Words of wisdom from mikecitizen</title>
      <link>http://nii236.github.io/technical-blog/post/2016-11-21-mikecitizen/</link>
      <pubDate>Mon, 21 Nov 2016 09:17:28 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-11-21-mikecitizen/</guid>
      <description>&lt;p&gt;There&amp;rsquo;s an amazing fellow who goes by the name Mike. There are many Mike&amp;rsquo;s in the world, so I&amp;rsquo;d like to narrow it down to this one particular Mike.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/user/MikeCitizen&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCgVybJK7wC3JB7TQVJCVmew&#34;&gt;Youtube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We had a few exchanges over PM on Reddit. Lots of good information here about the nature of Jazz practice and how we can improve ourselves. Conversation follows:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Hey dude,&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been going through our PM conversations a year or so ago and I&amp;rsquo;m sad to say that I have not gotten much progress with Jazz piano!
You&amp;rsquo;re pretty much at the point that I&amp;rsquo;d like to achieve. I&amp;rsquo;m not sure how to go about saying this, but I would like either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lessons from you; or&lt;/li&gt;
&lt;li&gt;Some sort of weekly email assignments from you telling me what to do/activities to attempt&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because honestly I&amp;rsquo;m getting nowhere and its very frustrating.&lt;/p&gt;

&lt;p&gt;Anyhoo happy to pay with Bitcoin or Paypal if you prefer!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I&amp;rsquo;m all too well acquainted with that feeling, and I know how difficult it break out of the musical stagnancy.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d be glad to give you lessons and/or assignments, and though I&amp;rsquo;m not opposed to being paid I have no idea what to charge. That&amp;rsquo;s relatively unimportant for now though.&lt;/p&gt;

&lt;p&gt;Going forward, I&amp;rsquo;d like to avoid giving you any advice or assignments that are completely trite, obvious, or otherwise totally not worth paying for. These are things I don&amp;rsquo;t doubt you already know, but are always worth repeating and are guaranteed to make you a better player (and often things I avoid doing myself, out of laziness, disinterest, and/or preference for having fun):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Practice slow and to a metronome. Talkin like 40-60bpm&lt;/li&gt;
&lt;li&gt;Drill every scale, every pattern, every chord, every inversion, in every key, every day, until you can easily play them in any sequence at ~200bpm. Congratulations, you are now a virtuoso.&lt;/li&gt;
&lt;li&gt;Learn tunes. Get a real book, find lead sheets online, pick them up by ear from youtube, play along to the television, anything. Learn all the songs. Learn songs you don&amp;rsquo;t even like. Getting your hands and ears around the common progressions, patterns, and harmonic movements that dominate popular music is invaluable.&lt;/li&gt;
&lt;li&gt;Transcribe. Pretty much anything. Solos from your favorite players, melodies from cartoon theme songs, spoken word, anything.&lt;/li&gt;
&lt;li&gt;Put in the time. I truly believe that focused time commitment is the most fundamentally important part of developing any skill or ability. If you do something a lot and you try hard to do it well, you will get better at it. That&amp;rsquo;s just how it works.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now these are all things that will with absolute certainty improve your technical facility, manual dexterity, aural skills, and understanding. They are simple enough, but damn hard to do consistently. I almost never play to a metronome, I often give up on drilling things about 3 or 4 keys into the 12, I rarely complete transcriptions, and I all to frequently just play the tunes I know because they&amp;rsquo;re easy and fun.&lt;/p&gt;

&lt;p&gt;An important thing to figure out and keep in mind is what exactly you want to achieve with and gain from playing music. You said I am at the point you&amp;rsquo;d like to get to (very flattering by the way, thank you), but I am far from the most technically gifted or dexterous pianist.I assume when you say that you mean more that you&amp;rsquo;d like to get comfortable and capable on piano to the point of being able to improvise around tunes with a level of freedom and ability that allows you to have fun and express yourself.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Wow! Thanks for the massive response! I must&amp;rsquo;ve hit a passionate spot with you.
How do you prefer to communicate? I like to use Google Hangouts if you have that. Otherwise we should share emails/WhatsApp/Facebook Messenger/Line ID or whatever. My email and Hangouts is jtnguyen236@gmail.com.&lt;/p&gt;

&lt;p&gt;I really enjoyed this video by you.&lt;/p&gt;

&lt;p&gt;Regarding payment, I think its worth paying you for sure. We can work it out later, for the time being I&amp;rsquo;m happy with just talking to someone about this stuff. I&amp;rsquo;ve engaged other people on Reddit for piano lessons before, but it&amp;rsquo;s always sort of fizzled out. The most recent one with Marcus Choi was 20 dollars for a 30 to 45 minute session. I prefer paying through Bitcoin since it&amp;rsquo;ll eventually appreciate a lot more plus I don&amp;rsquo;t have to pay massive fees. For instance I&amp;rsquo;m based in Australia and sending money to wherever you are (United States?) means that I&amp;rsquo;ll have to pay a huge amount on top. About 10 or 15% I think?&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m just sick of stagnation as you said. ii V7 Is in the circle of fourths over and over again. I just don&amp;rsquo;t enjoy the process as much as I should. The way you play is very in the moment and you look like you&amp;rsquo;re having fun! I want to play like that. Right now its just drills and calculated chords. Struggling with basic lead sheets. I know the theory, but my brain and ears can&amp;rsquo;t work fast enough. And if I CAN work fast enough, its an uninspired poking of boring chord inversions. Can&amp;rsquo;t do any decent variations or improv as I can&amp;rsquo;t hear sounds in my head. I want to be able to just feel where the notes should be and let the creativity flow. Right now my lack of ability to transfer my harmonic knowledge to the keys is a huge blocker.&lt;/p&gt;

&lt;p&gt;I just need someone to guide me. I want to be able to express myself. I&amp;rsquo;ve been at this for around five years now with nothing to show for it. Even something like &amp;lsquo;Do X and put it on Soundcloud&amp;rsquo;, and then having you listen to it would work for me. Like a study buddy or gym buddy, but for piano!
I wrote a sort of &amp;lsquo;profile&amp;rsquo; of myself for a previous teacher. I&amp;rsquo;ll paste it below for your reference.&lt;/p&gt;

&lt;p&gt;Classical&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I mucked around with the piano when I was 7. Managed to play fur elise and similar level stuff&lt;/li&gt;
&lt;li&gt;Two years of classical piano lessons when I was &lt;sup&gt;16&lt;/sup&gt;&amp;frasl;&lt;sub&gt;17&lt;/sub&gt;.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Hobbyist level, around grade 5 or 6 (no exams).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rondo Alla Turca&lt;/li&gt;
&lt;li&gt;Pathetique Movement 2&lt;/li&gt;
&lt;li&gt;Raindrop Prelude&lt;/li&gt;
&lt;li&gt;Liszt Consolation in D Flat&lt;/li&gt;
&lt;li&gt;Kuhlau Sonatina
Jazz&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I have had lessons with a jazz piano teacher for the past 3 years&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Lessons have sometimes had large breaks inbetween without practice (months at a time) because I often have to work in the mines. I&amp;rsquo;ve become based in Perth recently so more time to practice.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Covered A form and B form ii V7 Is (3rd and 7ths on the bottom) rootless voicing in regular (9ths) and basic forms in all keys&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Blues piano for the past year (12 bar blues, licks) in C and F&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Started transcribing, Wynton Kelly&amp;rsquo;s Freddie Freeloader solo and now Red Garland&amp;rsquo;s C Jam Blues solo (stabbing chords on the &amp;ldquo;2 and&amp;rdquo; and &amp;ldquo;4 and&amp;rdquo; is very difficult!)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Recently started exploring playing from basic lead sheets (Autumn Leaves, Fly me to the Moon etc) Lots of Lindy Hopping/Swing Dancing for the past 5 years too!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Music can be a source of functionally infinite joy and creative expression long before you develop virtuoso-level technical facility. Developing your technique expands the musical vocabulary with which you can express yourself, but hardly any technique is necessary to say and feel &amp;ldquo;This is me and I&amp;rsquo;m having fun&amp;rdquo; through an instrument. When it feels like your hands are playing you and you are struggling to do anything with them, it can be hard to get into that headspace of genuine expression, but its not impossible. You can jam out on C, F, and G triads and have a ball, but then it all falls away when you try to throw a Dm7b5 in and your hands remind you how little you&amp;rsquo;ve practiced. This is getting sorta rambly, but its something I feel very strongly about with music in my life. Being self-taught, my development as a musician and instrumentalist has come primarily through pursuing that sort of honest, joyful self-expression than it has from more mechanical routines and exercises. I do attempt those occasionally, and they are necessary when I need to learn new, more challenging songs, but they have never been my forte or MO.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;d still like to, I&amp;rsquo;d be glad to stay in correspondence and suggest exercises, tunes, ideas, or vaguely philosophical approaches to playing for you to try out and work with. It would be harder to schedule, but I&amp;rsquo;d also be open to doing Skype lessons or something in the future. Regardless, I&amp;rsquo;m glad you reached out, flattered that you&amp;rsquo;d come to me for help, and slightly embarrassed for writing so much. Hope any of this helps, and looking forward to hearing from you!&lt;/p&gt;

&lt;p&gt;I haven&amp;rsquo;t used Google Hangouts before but it should work, and I have no objection to bitcoin but I also have no idea how to accept it. I&amp;rsquo;ll look into setting up a bitcoin wallet.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m glad you enjoyed that video, its such a fun tune! I&amp;rsquo;ve forgotten the changes since but I am compelled to play it again now.
From what you&amp;rsquo;ve described, It&amp;rsquo;s clear you already understand and have loads of experience with the mechanical aspects of playing piano. You know the excitement of drilling uninspired patterns, and you&amp;rsquo;ve got a solid background in theory. It&amp;rsquo;s more so getting over the hurdle into playing with feeling and feeling what you&amp;rsquo;re playing.
Closing that gap between the music in your head and the music coming out of your fingers is the eternal struggle, and one I&amp;rsquo;m very well acquainted with. I can&amp;rsquo;t say that I have a tried and true method of cultivating joy and genuine expression in playing that I can pass onto you, but I&amp;rsquo;d love to give it a shot. I think giving assignments and what not with things to upload to soundcloud would be a great idea. I&amp;rsquo;ll message you on google hangouts and we&amp;rsquo;ll get more into that.
I&amp;rsquo;m looking forward to it!&lt;/p&gt;

&lt;p&gt;I do want to tell you that ultimately I won&amp;rsquo;t be able to accomplish for you what you want. I&amp;rsquo;m glad to help and advise, and I don&amp;rsquo;t mean that it will all be nothing, just that it&amp;rsquo;s going to have to come from you because that&amp;rsquo;s the only way it can. Really enjoying and feeling music is something I feel very strongly about and think about arguably too much, and it goes beyond just playing. Whether improvising, listening to, or just imagining music, there gatekeeper to passionate involvement and feeling and joy with music is always internal. It&amp;rsquo;s a state of mind to be in, and you won&amp;rsquo;t always be in it. The more you get into that flow, the easier it will be to get there and stay there for longer, and that&amp;rsquo;s where I think this musical relationship will help the most. It&amp;rsquo;s a type of practice that has almost nothing to do with the mechanical, technical, or theoretical aspects of the music, and almost everything to do with the creative, emotional, passionate aspects of it. You gotta love and want to hear every note you play, even if you can&amp;rsquo;t play every note you love and want to hear.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;No problem, the work is all mine, I just need some guidance!&lt;/p&gt;

&lt;p&gt;Good to see you on hangouts. If you&amp;rsquo;re looking at Bitcoin wallets, don&amp;rsquo;t use the main one because it has to sync like 30gb. I use Electrum!&lt;/p&gt;

&lt;p&gt;Chat to you soon!&lt;/p&gt;

&lt;p&gt;Are you an iPhone man? iMessages might work better.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Modes</title>
      <link>http://nii236.github.io/technical-blog/post/2016-11-15-modes/</link>
      <pubDate>Tue, 15 Nov 2016 12:05:23 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-11-15-modes/</guid>
      <description>&lt;p&gt;Another (fort)night, another jazz piano lesson.&lt;/p&gt;

&lt;h2 id=&#34;using-the-jazz-minor-modes&#34;&gt;Using the jazz minor modes.&lt;/h2&gt;

&lt;p&gt;Using the jazz minor modes is a good way to improvise.&lt;/p&gt;

&lt;p&gt;Modes sound a lot better when you can blend them into each other. They basically give you tension and release for free. It will give you the iconic bebop jazz sound.&lt;/p&gt;

&lt;p&gt;They sound awful on their own but playing it quickly and well blended will give a great sound.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;jazz-minor-scale&#34;&gt;Jazz minor scale&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;X:1
T: Jazz Minor Scale
K:C
s: CDEF
|: c2 d2 _e2 f2 | g2 a2 b2 c&#39;2:|
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For the first part of There Will Never Be Another You:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;X:1
T: TWNBAY part 1
K:C
s: CDEF
|:&amp;quot;EbMaj7&amp;quot; z4|&amp;quot;EbMaj7&amp;quot; z4|&amp;quot;Dm7b5&amp;quot; z4 |&amp;quot;G7&amp;quot; z4|&amp;quot;Cm7&amp;quot; z4 :|
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The lydian mode over EbMaj7

&lt;ul&gt;
&lt;li&gt;1 2 3 #4 5 6 7&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The locrian #2 mode over Dmin7b5

&lt;ul&gt;
&lt;li&gt;1 2 ♭3 4 ♭5 ♭6 ♭7 R&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Altered_scale&#34;&gt;altered&lt;/a&gt; scale over G7

&lt;ul&gt;
&lt;li&gt;1 ♭2 #2 3 #4 #5 ♭6 ♭7&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The dorian mode over Cm7

&lt;ul&gt;
&lt;li&gt;1 2 ♭3 4 5 6 ♭7&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;reading-from-lead-sheets&#34;&gt;Reading from lead sheets&lt;/h2&gt;

&lt;p&gt;Reading lead sheets fluently is just a matter of practice. Reading bebop tunes is good practice. They&amp;rsquo;re written for saxophones so fingering these tunes on a piano is difficult and leads to unexpected movements.&lt;/p&gt;

&lt;p&gt;Walking bass is extremely difficult and needs to be completely automatic. Best to leave it to later. For the time being simple 2 or 3 note voicings will do.&lt;/p&gt;

&lt;p&gt;When playing bud powell voicings (2 note), using 3 and 7th scale tones is fine when you&amp;rsquo;re in the middle register of the piano. Too low and it is a good idea to invert otherwise it&amp;rsquo;ll sound like a different chord.&lt;/p&gt;

&lt;h2 id=&#34;homework&#34;&gt;Homework&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Noodling around on the jazz minor modes as above&lt;/li&gt;
&lt;li&gt;Getting comfortable with the horrific sound of the jazz minor modes&lt;/li&gt;
&lt;li&gt;Reading through some simple swing lead sheets&lt;/li&gt;
&lt;li&gt;Learning Charlie Parker&amp;rsquo;s Dexterity&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Learning to improvise</title>
      <link>http://nii236.github.io/technical-blog/post/2016-10-31-learning-to-improvise/</link>
      <pubDate>Mon, 31 Oct 2016 12:05:23 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-10-31-learning-to-improvise/</guid>
      <description>&lt;p&gt;Learning to become a Jazz musician is a frustrating endeavour. There is no long and extensive history of the art form. Classical pianists have it easy in that regard. You&amp;rsquo;ve passed grade 4? Oh good, now you can work on passing grade 5. You will need to learn these scales, for this many octaves, and select pieces from this list. It should take roughly a year.&lt;/p&gt;

&lt;p&gt;There is no clear way of learning to become like the Jazz greats. Sure, ABRSM has their Jazz track. But its not really the same thing.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;In fact, it seems that many of the great Jazz musicians of our time simply became what they are through sheer hard work and self learning their craft.&lt;/p&gt;

&lt;p&gt;This is frustrating because I have had many jazz teachers for the past decade (4 so far) and I always seem to hit a wall. Its hard to explain. Its like I get lost in a sea of chord changes and esoteric scales. I lose track of timing, of the pulse and of the melody.&lt;/p&gt;

&lt;p&gt;So today during my lesson there were three important exercises I was given to attempt to unblock myself.&lt;/p&gt;

&lt;h2 id=&#34;tranposing-licks&#34;&gt;Tranposing licks&lt;/h2&gt;

&lt;p&gt;This was covered in my previous post. Breaking down licks into their functional elements, working with a single element in a key agnostic fashion, then combining multiple elements when you are ready.&lt;/p&gt;

&lt;h2 id=&#34;singing-while-playing&#34;&gt;Singing while playing&lt;/h2&gt;

&lt;p&gt;Lots of Jazz recordings have musicians humming while they&amp;rsquo;re playing. Its a lot more natural with woodwind or brass instruments. You can get by pretty far on the piano without having audiating anything at all! That&amp;rsquo;s actually one of the issues I have.&lt;/p&gt;

&lt;p&gt;So in this exercise, I was given a scale to work with. Lydian Bb in this case. I was to hum as I play. My teacher turned away from me to reduce my shame.&lt;/p&gt;

&lt;p&gt;This one was good, one of my main issues is having a huge disconnect between brain and hands. The idea is that you&amp;rsquo;ll naturally sing what feels melodic and hopefully our hands will follow along. As opposed to your hands mechanically doing things with muscle memory and your brain zoning out.&lt;/p&gt;

&lt;h2 id=&#34;free-improvisation&#34;&gt;Free improvisation&lt;/h2&gt;

&lt;p&gt;This is the most alarming of them all. My teacher again turned away from me during this phase to reduce the shame (this helps a lot!).&lt;/p&gt;

&lt;p&gt;My task was to play anything. Literally, just slap out notes. No chord progressions, no scales. Just poke around and get a feel for shapes and motifs.&lt;/p&gt;

&lt;p&gt;This one was a little trickier. My teacher tells me what I played during that moment was the most melodic thing I&amp;rsquo;ve played ever. I find that interesting and also unbelievable but there you go. By not focusing on chord progressions, melodies or timing, I was given the chance to explore the keyboard. When something sounds good I can expand on it.&lt;/p&gt;

&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;So this was one of the trickier sessions in my long history of taking piano lessons. In the end I definitely see the advantage here. I have reduced the frequency of my piano lessons down to once a fortnight and I will focus on these exercises until the next lesson.&lt;/p&gt;

&lt;p&gt;The most interesting one to me was singing while playing. I felt so much more connected to the instrument and what I was actually playing. Normally when I improvising I spend a lot of time just thinking about the scale tones, approach notes, surrounds and various scales. By just humming and playing along with what&amp;rsquo;s in my head I hope to be able to bridge that gap that has been there my entire music life.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Learning lick 1</title>
      <link>http://nii236.github.io/technical-blog/post/2016-10-29-lick-1/</link>
      <pubDate>Sat, 29 Oct 2016 12:05:23 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-10-29-lick-1/</guid>
      <description>&lt;p&gt;In this blog post I will attempt to explain how I am learning these licks.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Here is lick 1 again.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;X:1
T: Lick 1
K:C
s: CDEF
|:&amp;quot;Dm7b5&amp;quot; F3 ^C DF_Ac|&amp;quot;G7&amp;quot; B_B_A^F G=Bdf|&amp;quot;Cm7&amp;quot; _e8:|
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So what&amp;rsquo;s going on here?&lt;/p&gt;

&lt;h2 id=&#34;bar-one&#34;&gt;Bar one&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;X:1
T: Lick 1
K:C
s: CDEF
|:&amp;quot;Dm7b5&amp;quot; F3 ^C DF_Ac|
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some observations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We&amp;rsquo;re in the key of Eb.&lt;/li&gt;
&lt;li&gt;This is a ii V7 I on the 6th.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first bar does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start on the minor third and approach the root from a semitone below.&lt;/li&gt;
&lt;li&gt;Arpeggiate up the chord (Dmin7b5) and hit the 7th. Simple enough.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;bar-two&#34;&gt;Bar two&lt;/h2&gt;

&lt;p&gt;In bar 2, we are now in G7.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;X:1
T: Lick 1
K:C
s: CDEF
|:&amp;quot;G7&amp;quot; B_B_A^F G=Bdf|
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is where it gets sorta weird.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Descend down the &lt;a href=&#34;https://en.wikipedia.org/wiki/Altered_scale&#34;&gt;altered scale&lt;/a&gt; past the tonic&lt;/li&gt;
&lt;li&gt;Surround the tonic&lt;/li&gt;
&lt;li&gt;Arpeggiate up the current chord, easy enough.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;bar-three&#34;&gt;Bar three&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;X:1
T: Lick 1
K:C
s: CDEF
|:&amp;quot;Cm7&amp;quot; _e8:|
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lastly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;End on the third of i7.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;thoughts&#34;&gt;Thoughts&lt;/h1&gt;

&lt;p&gt;So what&amp;rsquo;s so interesting about this? Not much, honestly, its a pretty basic lick. The idea here is that we have mini blocks of functional lick ideas. Its not enough to just transcribe and copy jazz tunes and improvisations.&lt;/p&gt;

&lt;p&gt;Allegedly (my teacher tells me), its best to break it down into functional blocks. Arpeggiate here, surround there, approach over there. All these need to be learned in the context of the harmony.&lt;/p&gt;

&lt;p&gt;So instead of this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;start on &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;approach the &lt;code&gt;D&lt;/code&gt; from &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;then arpeggiate up to &lt;code&gt;C&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You would think of this in your head:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;start on the third of the current chord which is a &lt;code&gt;min7b5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;approach the &lt;code&gt;tonic&lt;/code&gt; from a &lt;code&gt;semitone&lt;/code&gt; below&lt;/li&gt;
&lt;li&gt;then arpeggiate up to its &lt;code&gt;7th&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this in mind, and transposing it a few times, you will be able to get a core understanding of what it is the lick is actually doing.&lt;/p&gt;

&lt;p&gt;Then during practice, you would apply a single functional concept. Maybe you&amp;rsquo;d attempt to focus on &amp;lsquo;approaching the tonic from a semitone below&amp;rsquo;. The next practice session you could focus on &amp;lsquo;arpeggiating from the tonic up to its 7th&amp;rsquo;.&lt;/p&gt;

&lt;h2 id=&#34;the-above-is-very-important&#34;&gt;The above is very important!&lt;/h2&gt;

&lt;p&gt;Learn a bunch of functional building blocks for licks.&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;Compose them all together on the fly in any key.&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;Become a jazz master!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://nii236.github.io/technical-blog/technical-blog/images/jazzpianomaster.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rendering music</title>
      <link>http://nii236.github.io/technical-blog/post/2016-10-17-musical-notation/</link>
      <pubDate>Mon, 17 Oct 2016 18:40:23 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-10-17-musical-notation/</guid>
      <description>&lt;p&gt;So I need a way of recording my learnings about Jazz music. Mostly because I can barely keep track of my life in general.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Turns out there&amp;rsquo;s a sweet library called &lt;a href=&#34;https://abcjs.net&#34;&gt;abc.js&lt;/a&gt;. It renders the ABC syntax for music! I used to use Lilypond, but this is a nice subset, suitable for webpages.&lt;/p&gt;

&lt;p&gt;Well, the minified version is 487kb, which you all have already downloaded just by visiting this website. Sorry about that!&lt;/p&gt;

&lt;p&gt;As a test, I have posted one of the jazz licks I am learning in this post. In a future blog post, I shall talk about things I have learnt about each lick.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;X:1
T: Lick 1
K:C
s: CDEF
|:&amp;quot;Dm7b5&amp;quot; F3 ^C DF_Ac|&amp;quot;G7&amp;quot; B_B_A^F G=Bdf|&amp;quot;Cm7&amp;quot; _e8:|
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Optimising Japanese Study</title>
      <link>http://nii236.github.io/technical-blog/post/2016-10-07-optimising-japanese/</link>
      <pubDate>Fri, 07 Oct 2016 12:52:23 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-10-07-optimising-japanese/</guid>
      <description>&lt;p&gt;This is just a snippet I posted in Reddit a LONG time ago. People keep digging up that post and asking about it, so I decided to paste it here while I work out how to present it properly.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;original-post&#34;&gt;Original Post&lt;/h1&gt;

&lt;h2 id=&#34;ability-required-to-read-light-novels&#34;&gt;Ability required to read light novels&lt;/h2&gt;

&lt;p&gt;Hey everyone I am new to Japanese and I know I have a long ways to go but I was curious if anyone could answer my question. I was curious how much japanese (we&amp;rsquo;ll use JLPT levels as an example) one would need to know in order to read a light novel such as Sword Art Online? Thanks!&lt;/p&gt;

&lt;h1 id=&#34;my-response&#34;&gt;My Response&lt;/h1&gt;

&lt;p&gt;Its interesting that you ask this, because I&amp;rsquo;ve been preparing to do exactly what you&amp;rsquo;re doing over the past few days (learn with the goal of reading Sword Art Online). I&amp;rsquo;m pretty happy with my approach. You just gotta chip away at it, make the learning part as effortless as possible and approach it systematically.&lt;/p&gt;

&lt;p&gt;Starting resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I have a paper copy of the raw Japanese novel.&lt;/li&gt;
&lt;li&gt;I have digital copies of the Japanese and English novels.&lt;/li&gt;
&lt;li&gt;I have Tae Kim&amp;rsquo;s grammar guide, and an Anki deck of all Heisig primitives.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the above resources, I got some programs off the interwebs and ran an analysis on the first novel. Some findings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hayashi score of grade 9 (easiest to hardest 1-13)&lt;/li&gt;
&lt;li&gt;OBI-2 grade 63.5776557318521 (easiest to hardest 0-100)&lt;/li&gt;
&lt;li&gt;1848 unique kanji in the first book &lt;a href=&#34;http://pastebin.com/BQTEWuGc&#34;&gt;(report here, last column is cumulative frequency)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;8002 unique words in the first book &lt;a href=&#34;http://pastebin.com/jTYk1v6X&#34;&gt;(report here, last column is cumulative frequency)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the above information in mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I divided up the book into 2000 characters per HTML page. Using HTML pages will allow me to use Rikai sama to generate Anki vocab words quickly and easily. Dividing the book into sections help make it more manageable (doing one section per day for instance)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Working on 2000 characters at a time will take you 180 days to go through the first book.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add unknown words to the deck as I go along. Use Tae Kim&amp;rsquo;s Guide (or The Beginner&amp;rsquo;s Guide to Japanese Grammar) to assist with grammar referencing. Compare with English translated book.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In theory I should be able to get through the book in about 6 months, with a neat anki deck with relevant cards. No idea how well I&amp;rsquo;ll do, but let me know if you&amp;rsquo;d like me to share more information.&lt;/p&gt;

&lt;p&gt;Disclaimer: I&amp;rsquo;ve had about 5 years or so of (poorly committed) Japanese learning. So easy steps for me might be extremely hard for you.&lt;/p&gt;

&lt;p&gt;Disclaimer 2: An alternative method would be to create a true i+1 deck using the CB&amp;rsquo;s Kanji Word Association tool, using the kanji frequency given by the SAO novel but that created 5000 vocab cards to go through and I just couldn&amp;rsquo;t be bothered (guys on the IRC channel talked me out of attempting that)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Micro</title>
      <link>http://nii236.github.io/technical-blog/post/2016-06-25-microservice-architecture-thoughts/</link>
      <pubDate>Sat, 25 Jun 2016 12:52:23 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-06-25-microservice-architecture-thoughts/</guid>
      <description>&lt;p&gt;So it turns out that some people actually have interest in what I (attempted to) build with regards to the microservice trading platform I mentioned a few posts ago.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;I ended up doing a screencast to try and explain what I&amp;rsquo;ve done so far with my app and how it all plugs together.&lt;/p&gt;

&lt;p&gt;Thanks to Oren Golan for setting this up! &lt;a href=&#34;https://oren.github.io/blog/micro.html&#34;&gt;The link to the post is here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reharm Algorithm</title>
      <link>http://nii236.github.io/technical-blog/post/2016-06-16-leadsheetvoicings/</link>
      <pubDate>Thu, 16 Jun 2016 16:40:48 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-06-16-leadsheetvoicings/</guid>
      <description>&lt;p&gt;This is a follow-up post from the previous post regarding building extended chords. I will be documenting how I come up with various voicings for &lt;a href=&#34;https://en.wikipedia.org/wiki/A_Foggy_Day&#34;&gt;A Foggy Day&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;rules-of-thumb&#34;&gt;Rules of thumb&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Repeating the melody an octave below is okay&lt;/li&gt;
&lt;li&gt;Avoid the fifth in favour of other intervals (including for the melody)&lt;/li&gt;
&lt;li&gt;Tritone subtitutions where suitable&lt;/li&gt;
&lt;li&gt;When the melody is on the fifth Reharmonisation it is possible to change the tonic to suit a more interesting interval.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;bar-1&#34;&gt;Bar 1&lt;/h2&gt;

&lt;h3 id=&#34;step-1-tonic-and-melody&#34;&gt;Step 1 - Tonic and Melody&lt;/h3&gt;

&lt;p&gt;Figure out the following bits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tonic: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Chord: &lt;code&gt;Fmaj7&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Melody: &lt;code&gt;C&lt;/code&gt; (the &lt;code&gt;5th&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;step-2-3rd-and-7th-shell-voicing&#34;&gt;Step 2 - 3rd and 7th shell voicing&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;3rd: &lt;code&gt;A&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;7th: &lt;code&gt;B&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;step-3a-add-alterations&#34;&gt;Step 3a - Add Alterations&lt;/h3&gt;

&lt;p&gt;You also need to make sure the intervals between the alteration and the melody note is suitable. See the previous blog post for suitable alterations.&lt;/p&gt;

&lt;h3 id=&#34;step-3b-consider-context&#34;&gt;Step 3b - Consider Context&lt;/h3&gt;

&lt;h4 id=&#34;step-3b-1-dominant-v&#34;&gt;Step 3b.1 Dominant V&lt;/h4&gt;

&lt;p&gt;Any dominant 7th chords acting as the fifth of the key centre can be switched with a tritone substitution, melody allowing.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chord Extensions</title>
      <link>http://nii236.github.io/technical-blog/post/2016-06-16-chordextensions/</link>
      <pubDate>Thu, 16 Jun 2016 16:18:06 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-06-16-chordextensions/</guid>
      <description>&lt;p&gt;This is a summary from the &lt;a href=&#34;www.reddit.com/r/piano&#34;&gt;/r/piano&lt;/a&gt;
 subreddit FAQ. User &lt;code&gt;onaz&lt;/code&gt; gives a great summary on good chord extensions to use.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;I have been playing around with Jazz piano for many years but knowing which extension to use for a chord often eludes me. Turns out there are actually systematic categories for each!&lt;/p&gt;

&lt;p&gt;I will be assuming chords built of the tonic of &lt;code&gt;C&lt;/code&gt; for each chord below. Because I&amp;rsquo;m a nooblet.&lt;/p&gt;

&lt;h1 id=&#34;major7-chords&#34;&gt;Major7 chords&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G B
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;suitable-extensions&#34;&gt;Suitable extensions&lt;/h2&gt;

&lt;h3 id=&#34;9th&#34;&gt;9th&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G B D
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is a safe note to add for many different voicings&lt;/p&gt;

&lt;h3 id=&#34;11&#34;&gt;#11&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G B F#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This comes from the lydian mode. A normal &lt;code&gt;11th&lt;/code&gt; (or &lt;code&gt;4th&lt;/code&gt;) would clash with the major seventh sound as it&amp;rsquo;s an avoid note. However, when we raise the usual note a half-step, we get a very rich &lt;code&gt;#11&lt;/code&gt; sound.&lt;/p&gt;

&lt;h3 id=&#34;13th&#34;&gt;13th&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G B A
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;13th&lt;/code&gt; (or &lt;code&gt;6th&lt;/code&gt;) won&amp;rsquo;t add very much color to a major seven chord because the function it provides is the same as the normal major seventh. We often talk about how major seven chords (like &lt;code&gt;Cmaj7&lt;/code&gt;) are interchangable with sixth chords (like &lt;code&gt;C6&lt;/code&gt;) because of their function.&lt;/p&gt;

&lt;h2 id=&#34;upper-structure-triads&#34;&gt;Upper Structure Triads&lt;/h2&gt;

&lt;p&gt;To get an instant &lt;code&gt;13(#11)&lt;/code&gt; sound on a major chord, add a triad built from a whole step above the root.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;USII - e.g. D major over Cmaj7, resulting in C13♯11&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So if we have a &lt;code&gt;Cmaj7&lt;/code&gt; chord&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G B
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We go a whole step above the root of the chord (which is a &lt;code&gt;C&lt;/code&gt;). Then we take that note (&lt;code&gt;D&lt;/code&gt;) and build a major triad from there. Now in addition to &lt;code&gt;C E G B&lt;/code&gt;, we are adding &lt;code&gt;D F# A&lt;/code&gt; to get a final chord of &lt;code&gt;C13(#11)&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G B D F# A
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;minor-7th-chords&#34;&gt;Minor 7th chords&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G Bb
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;suitable-extensions-1&#34;&gt;Suitable extensions&lt;/h2&gt;

&lt;h3 id=&#34;9th-1&#34;&gt;9th&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C Eb G Bb D
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Still a safe note to add.&lt;/p&gt;

&lt;h3 id=&#34;11th&#34;&gt;11th&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C Eb G Bb F
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This comes from the dorian mode and is a great note to add.&lt;/p&gt;

&lt;h3 id=&#34;13th-1&#34;&gt;13th&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C Eb G Bb A
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A good note to add in minor voicings.&lt;/p&gt;

&lt;h2 id=&#34;upper-structure-triads-1&#34;&gt;Upper Structure Triads&lt;/h2&gt;

&lt;p&gt;For minor 7th chords we can use a USii voicing, in this case the Dm. You&amp;rsquo;ll get a Cm13!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;USii - e.g. D minor over Cm7, resulting in Cm13&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C Eb G Bb D F A
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;7th-chords&#34;&gt;7th chords&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G Bb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dominant chords provide the most opportunity for color. They are often used in transition and contain the most dissonance in a chord progression.&lt;/p&gt;

&lt;h2 id=&#34;suitable-extensions-2&#34;&gt;Suitable extensions&lt;/h2&gt;

&lt;h3 id=&#34;5-b5&#34;&gt;#5/b5&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E Gb Bb
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G# Bb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These usually replace the normal fifth.&lt;/p&gt;

&lt;h3 id=&#34;9&#34;&gt;9&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G Bb D
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Adds more color&lt;/p&gt;

&lt;h3 id=&#34;9-b9&#34;&gt;#9/b9&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G Bb Db
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G Bb D#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Altering the nine can give you a ton of color and disonnace very quickly&lt;/p&gt;

&lt;h3 id=&#34;11-1&#34;&gt;11&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G Bb F
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This turns the chord into a sus chord. You&amp;rsquo;ll see that written as &lt;code&gt;C7sus&lt;/code&gt;. This is one of the least dissonant alterations you can make.&lt;/p&gt;

&lt;h3 id=&#34;11-2&#34;&gt;#11&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G Bb F#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You&amp;rsquo;ll notice that &lt;code&gt;#11&lt;/code&gt; and b5 are the same note. &lt;code&gt;#11&lt;/code&gt; is simply another way to think about it.&lt;/p&gt;

&lt;h3 id=&#34;13&#34;&gt;13&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C E G Bb A
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Adds more colour (and is a standard addition to our four note rootless voicings.)&lt;/p&gt;

&lt;h2 id=&#34;upper-structure-triads-2&#34;&gt;Upper Structure Triads&lt;/h2&gt;

&lt;p&gt;The 7th chords are the most flexible here. You can use any of the following triads to alter the chord (from Wikipedia).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;USII - e.g. D major over C7, resulting in C13♯11&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;US♭V - e.g. G♭ major over C7, resulting in C7♭9♯11&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;US♭VI - e.g. A♭ major over C7, resulting in C7♯9♭13&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;USVI - e.g. A major over C7, resulting in C13♭9&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;USi - e.g. C minor over C7, resulting in C7♯9&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;US♭ii - e.g. D♭ minor over C7, resulting in C7♭9 ♭13&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;US♭iii - e.g. E♭ minor over C7, resulting in C7♯9♯11&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;additional-notes&#34;&gt;Additional Notes&lt;/h1&gt;

&lt;p&gt;Usually many of these alterations are used together to create a dissonant sound to the liking of the pianist. Often you&amp;rsquo;ll see printed alterations in dominant chords caused by melody notes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Most often you will change combinations of the 5th and 9th to get a sound you like.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Elixir</title>
      <link>http://nii236.github.io/technical-blog/post/2016-06-16-elixir/</link>
      <pubDate>Thu, 16 Jun 2016 14:30:07 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-06-16-elixir/</guid>
      <description>&lt;p&gt;All this Gophering around can get boring. That&amp;rsquo;s not a bad thing, I still consider Go the language with which I am strongest and most comfortable. If I had to use a language at my workplace, Go would be it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;But sometimes you just want to poke around and see what else is out there. A language that offers a sense of adventure instead of the safety of Go and its static types, simplicity, rock solid linting and strict philosophy.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;elixir-lang.org&#34;&gt;Elixir&lt;/a&gt; complements Go in this regard. In fact it seems to be the complete opposite. Loosely typed, immutable data structures, enumerators, functional style programming.&lt;/p&gt;

&lt;p&gt;So yeah, apparently functional programming is a cool hip thing to do nowadays. Its a fancy term, it makes you think that functional programming actually works (you know, its &lt;em&gt;FUNCTIONAL&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;I play around with linux/unix/osx (hah!) a lot, and the fact that you have a pipeline operator Elixir is amazing! Also map, reduce, filter and each operators are something I miss a lot moving to Go from Ruby, so I&amp;rsquo;m glad to see that it&amp;rsquo;s got the first class treatment here in Elixir.&lt;/p&gt;

&lt;h1 id=&#34;n-ot-i-nvented-h-ere&#34;&gt;N(ot) I(nvented) H(ere)&lt;/h1&gt;

&lt;p&gt;Being in Go land for so long, I had forgotten what the rest of the programming world is like. Gopher&amp;rsquo;s shun extending the language, using dependencies, building packages for others to use.&lt;/p&gt;

&lt;p&gt;Gopher&amp;rsquo;s have a serious case of NIH syndrome, and everything is handrolled to extremes. Its actually quite nice if you think about it. The software you develop ends up fitting like a really, really tight glove.&lt;/p&gt;

&lt;p&gt;It was, however, still an (unexpected) breath of fresh air when I had a look at the Elixir community and how they were enthusiastically talking about writing macros, extending the language, using web frameworks and installing dependencies willy nilly.&lt;/p&gt;

&lt;h1 id=&#34;code&#34;&gt;Code&lt;/h1&gt;

&lt;p&gt;So I figured as a raw exercise, to convert one of the easy katas I did long ago. The exercise is called &lt;a href=&#34;https://www.hackerrank.com/challenges/cut-the-sticks&#34;&gt;Cut the Sticks&lt;/a&gt; and is a good exercise in recursion (my Go solution did not, however, use recursion).&lt;/p&gt;

&lt;h2 id=&#34;processing-stdin&#34;&gt;Processing STDIN&lt;/h2&gt;

&lt;p&gt;The hardest part in Go is always processing the arguments that come through HackerRank. Lots of STDIN scanning, processing etc.&lt;/p&gt;

&lt;p&gt;Here is how I processed the STDIN with Go.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// GetArgs reads from STDIN and returns stuff in the correct format
func GetArgs(r io.Reader) (int, []int) {
	var numArgs = 0
	_, err := fmt.Fscanln(r, &amp;amp;numArgs)

	if err != nil {
		fmt.Println(err)
	}

	sumArgs := make([]int, numArgs)
	for i := range sumArgs {
		_, err = fmt.Fscan(r, &amp;amp;sumArgs[i])
		if err != nil {
			fmt.Println(err)
		}
	}

	return numArgs, sumArgs
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here it is in Elixir.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def process(input) do
  values = String.split(input, &amp;quot;\n&amp;quot;)
    |&amp;gt; List.delete_at(0)
    |&amp;gt; List.delete_at(-1)
    |&amp;gt; List.to_string
    |&amp;gt; String.strip
    |&amp;gt; String.split(&amp;quot; &amp;quot;)
    |&amp;gt; Enum.map(&amp;amp;(Integer.parse(&amp;amp;1)))
    |&amp;gt; Enum.map(&amp;amp;(elem(&amp;amp;1,0)))
  recurse_cut(values, Enum.max(values))
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maybe I just suck at Go, but I dunno, there&amp;rsquo;s just something really, really &lt;strong&gt;satisfying&lt;/strong&gt; about the pipeline operator and processing stuff functionally.&lt;/p&gt;

&lt;h2 id=&#34;cutting-the-sticks&#34;&gt;Cutting the sticks&lt;/h2&gt;

&lt;p&gt;The &lt;em&gt;actual&lt;/em&gt; code involves chopping off the sticks by the length of the shortest stick until nothing remains.&lt;/p&gt;

&lt;p&gt;UPDATE: I had a look and turns out I wrote the Go code recursively after all!&lt;/p&gt;

&lt;p&gt;Here it is in Go:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func cut(numArgs int, args []int, finalArray []int) (int, []int, []int) {

	var newArray []int
	var newFinalArray []int
	var zeroValue bool

	minArg := args[0]

	// Get smallest number in args
	for _, arg := range args {
		if arg &amp;lt; minArg {
			minArg = arg
		}
		if arg == 0 {
			zeroValue = true
		}
	}

	// If non zero, append to resulting array, less the minimum arg
	for _, arg := range args {
		if arg != 0 {
			newArray = append(newArray, arg-minArg)
		}
	}

	// If there exists any zero length sticks, run function again
	if zeroValue {
		return cut(len(newArray), newArray, finalArray)
	}

	// If more than 1 stick remain, run function recursively
	if numArgs &amp;gt; 1 {
		newFinalArray = append(finalArray, len(newArray))
		return cut(len(newArray), newArray, newFinalArray)
	}

	newFinalArray = append(finalArray, len(newArray))
	return len(newArray), newArray, newFinalArray

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here it is in Elixir:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  def recurse_cut(values, max) when max &amp;gt; 0 do
    min = values
      |&amp;gt; Enum.filter(&amp;amp;(&amp;amp;1 &amp;gt; 0))
      |&amp;gt; Enum.min
    IO.puts(Enum.count(values, &amp;amp;(&amp;amp;1 &amp;gt;= min)))
    result = Enum.map(values, &amp;amp;(&amp;amp;1-min))
    recurse_cut(result, Enum.max(result))
  end

  def recurse_cut(_values, max) when max &amp;lt;= 0 do
  end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Its so clean!&lt;/p&gt;

&lt;p&gt;As you can see, for programs that require a lot of iteration and mucking about, you might find that a functional style is a lot more efficient, and easier to understand.&lt;/p&gt;

&lt;p&gt;I still believe Go has advantages in tooling, raw speed, simplicity, teams, documentation and a unified community vision. But Elixir offers a great functional style of programming and a sense of adventure that complements it very nicely.&lt;/p&gt;

&lt;p&gt;I haven&amp;rsquo;t explored Elixir&amp;rsquo;s metaprogramming, macros or concurrency yet. I will have a look and share my thoughts in the future.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A trading platform in Go</title>
      <link>http://nii236.github.io/technical-blog/post/2016-04-27-microservices/</link>
      <pubDate>Wed, 27 Apr 2016 14:21:40 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-04-27-microservices/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been obsessing over Go lately. I won&amp;rsquo;t go into it much since pretty much everyone else on the internet has at some point or another. And all of the people I know have probably heard me raving about it. The quality of the language itself remains divisive, but I am going to soldier on and just try and build something.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-project&#34;&gt;The project&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve been looking at playing with &lt;a href=&#34;https://github.com/micro/go-micro&#34;&gt;go-micro&lt;/a&gt; and building microservices. Really, I only needed an excuse to build something. I&amp;rsquo;ve come across some decent trading platforms and frameworks online but nothing really built in Go. So that&amp;rsquo;s my project.&lt;/p&gt;

&lt;p&gt;The first step will be to write a client that subscribes to the Interactive Brokers API and publishes the ticker data onto a &lt;a href=&#34;http://nats.io/&#34;&gt;NATS&lt;/a&gt; message bus, which will then be consumed by &lt;a href=&#34;https://influxdata.com/&#34;&gt;InfluxData&amp;rsquo;s&lt;/a&gt; Telegraf NATS connector. This will give me a bunch of data to play with, with helpful time series crunching tools that come for free with InfluxDB (&lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, even an &lt;code&gt;SMA&lt;/code&gt;!).&lt;/p&gt;

&lt;p&gt;Everything will be docker-ised into a swarm. NATS and Influx provide docker containers so that&amp;rsquo;s easy. The single microservices will contain static binaries so (in theory) that will be easy as well.&lt;/p&gt;

&lt;h2 id=&#34;the-snippet&#34;&gt;The snippet&lt;/h2&gt;

&lt;p&gt;Here is a code snippet that subscribes to the IB API (also docker-ised) and (for now) just logs the values to STDOUT.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func exec(pair string, currency string) {
	log.Infoln(&amp;quot;Starting connection to IB gateway...&amp;quot;, &amp;quot;Pair:&amp;quot;, pair, &amp;quot;, Currency:&amp;quot;, currency)
	options := &amp;amp;ib.EngineOptions{
		Client:           0,
		Gateway:          &amp;quot;192.168.99.100:4003&amp;quot;,
		DumpConversation: false,
	}

	var err error
	e, err = ib.NewEngine(*options)

	defer e.Stop()

	if err != nil {
		log.Fatalln(&amp;quot;ERROR!&amp;quot;, err)
		return
	}
	defer e.Stop()
	log.Infoln(&amp;quot;Done.&amp;quot;)
	log.Infoln(&amp;quot;Setting up contract for subscription...&amp;quot;)
	contract := &amp;amp;ib.Contract{
		Symbol:       pair,
		SecurityType: &amp;quot;CASH&amp;quot;,
		Exchange:     &amp;quot;IDEALPRO&amp;quot;,
		Currency:     currency,
	}

	im, err := ib.NewInstrumentManager(e, *contract)
	defer im.Close()
	ctm, err := ib.NewCurrentTimeManager(e)
	defer ctm.Close()

	if err != nil {
		log.Fatalln(err)
	}

	for {
		select {
		case &amp;lt;-im.Refresh():
			if err := im.FatalError(); err != nil {
				log.Fatalln(err)
			}
			log.Infoln(&amp;quot;Time:&amp;quot;, ctm.Time().UnixNano())
			log.Infoln(&amp;quot;Bid:&amp;quot;, im.Bid())
			log.Infoln(&amp;quot;Ask:&amp;quot;, im.Ask())
			log.Infoln(&amp;quot;Last:&amp;quot;, im.Last())
		}

	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At the moment CPU usage jumps up to 50% as soon as you connect to the IB Gateway. No idea why but I&amp;rsquo;m just going to assume its a library issue for the time being.&lt;/p&gt;

&lt;p&gt;The repo can be located on &lt;a href=&#34;https://github.com/nii236/nii-finance&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Experiments in learning jazz piano</title>
      <link>http://nii236.github.io/technical-blog/post/2016-02-01-learning-jazz-piano/</link>
      <pubDate>Mon, 01 Feb 2016 10:06:25 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2016-02-01-learning-jazz-piano/</guid>
      <description>&lt;p&gt;So I have been learning music on and off for years, and have never really gotten to a &lt;strong&gt;fully sick&lt;/strong&gt; level of proficiency. The problem here is usually that I don&amp;rsquo;t put in enough hours, which is true. The other problem is paralysis analysis, and the filthy need to optimise my learning. I have suffered this same problem in my Japanese studies but I&amp;rsquo;ll leave that for another post.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;jazz&#34;&gt;Jazz&lt;/h1&gt;

&lt;p&gt;My background is classical piano, where I learnt enough in high school that a constant level of proficiency just sticks with me for the rest of my life. My interest in the past five years, however, has been jazz piano. I have had various teachers, learning methods and styles, but have never really seemed to stick. My poor sight reading ability coupled with my adult responsibilities (harhar) make it difficult to keep a steady practice routine going.&lt;/p&gt;

&lt;p&gt;I am about to embark on a new method, combining everything that I have attempted so far.&lt;/p&gt;

&lt;h1 id=&#34;synthesia&#34;&gt;Synthesia&lt;/h1&gt;

&lt;p&gt;The game &lt;a href=&#34;http://www.synthesiagame.com&#34;&gt;Synthesia&lt;/a&gt; is something that has been around for a long long time. I bought a license back in 2011 I think, and its still been going strong. I opened up the latest version just last night and it seems that it now supports:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom hand splitting&lt;/li&gt;
&lt;li&gt;Looping&lt;/li&gt;
&lt;li&gt;Sweet sweet UI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Definitely worth the price.&lt;/p&gt;

&lt;h2 id=&#34;finding-high-quality-midi&#34;&gt;Finding high quality MIDI&lt;/h2&gt;

&lt;p&gt;Most of the songs in Synthesia kind of suck to be honest. Not to mention irrelevant to jazz piano. Or classical piano. Or anything decent really. And I refuse to pay for lame-o Adele piano covers.&lt;/p&gt;

&lt;p&gt;So I went hunting around for decent jazz piano MIDI. It needs to ideally have backing tracks, quantized beats and split tracks for each hand. Its not easy. Here it is.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.bushgrafts.com&#34;&gt;Douglas McKenzie&lt;/a&gt; (I bought his DVD!) is a great jazz pianist in Australia. He has a website with excellently formatted MIDI files. Its actually to time! And he even releases sheet music transcriptions of each of his solos. The MIDI files even have his annotations of each improvisation idea dammit! Its amazing.&lt;/p&gt;

&lt;p&gt;I am also lazy. So run the following code in the folder of your choice to download all the MIDI files on his page.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -A mid -m -p -E -k -K -np http://www.bushgrafts.com/jazz/midi.htm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Stage 2 (actually stage 999) will be to look at these &lt;a href=&#34;http://www.billevans.nl/midipage.htm&#34;&gt;Bill Evans transcriptions&lt;/a&gt;. Pull them thus:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -A mid -m -p -E -k -K -np http://www.billevans.nl/midipage.htm
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;using-the-midi&#34;&gt;Using the MIDI&lt;/h2&gt;

&lt;p&gt;So just feed these into Synthesia, have a listen, play what you can, then check against the Synthesia falling notes, official sheet music or the generated ones from the game.&lt;/p&gt;

&lt;p&gt;Feed the MIDI output into a virtual MIDI device into Reaper, and listen to that &lt;a href=&#34;https://www.pianoteq.com/&#34;&gt;sweet sweet piano VST&lt;/a&gt; that you no doubt own.&lt;/p&gt;

&lt;p&gt;Practice the ear, export to MP3, run it through &lt;a href=&#34;http://www.seventhstring.com/&#34;&gt;Transcribe&lt;/a&gt; (or just slow it down through Synthesia)!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Introducing Graviton</title>
      <link>http://nii236.github.io/technical-blog/post/2015-11-15-graviton/</link>
      <pubDate>Sun, 15 Nov 2015 16:18:08 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2015-11-15-graviton/</guid>
      <description>&lt;p&gt;I&amp;rsquo;d like to introduce Graviton in this post. Its a name I made up for my project mentioned in a previous post. There&amp;rsquo;s no real point to the name, except that it uses Electron plus Go. So I figured I&amp;rsquo;d choose a cool physics based name that starts with G.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;In this post I&amp;rsquo;ll explain the basic steps in communicating between the front and back. In this case a &amp;ldquo;Hello World&amp;rdquo; should do the trick.&lt;/p&gt;

&lt;p&gt;So there are three parts to a graviton app:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Browser front-end&lt;/li&gt;
&lt;li&gt;Node js glue-end&lt;/li&gt;
&lt;li&gt;Golang backend&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first two parts are covered with Electron.js. And the backend is covered by Go, believe it or not.&lt;/p&gt;

&lt;p&gt;Connecting the front-end to the glue-end is done by Electron&amp;rsquo;s internal &lt;code&gt;ipc&lt;/code&gt; package. Its an event based system.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s send a &amp;ldquo;Hello from front-end&amp;rdquo; message from our front-end. I&amp;rsquo;m a react.js guy as well, so that&amp;rsquo;s what I&amp;rsquo;ll be using.&lt;/p&gt;

&lt;p&gt;Create a React component which has a button which calls:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ipc.send(&#39;SendHello&#39;, &#39;Front-end&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the glue-end, you&amp;rsquo;ll want a handler for this event, which basically just passes this onto the backend&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var client = new todoProto.Todo(&#39;localhost:3000&#39;, grpc.Credentials.createInsecure());

ipc.on(&#39;SendHello&#39;, function(event, arg) {
  client.sendHello({request: arg}, function(err, response) {
    if (err) { console.log(err); }
    event.sender.send(&#39;SendHelloResponse&#39;, response)
  });
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The communication between the glue-end and the backend needs to be declared in a protobuf3 file. The glue-end will also handle the response which will be sent back over IPC to the front-end:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;syntax = &amp;quot;proto3&amp;quot;;

package Hello;

message SendHelloRequest {
  string request = 1;
}

message SendHelloResponse {
  string response = 1;
}

service Todo {
  rpc SendHello(SendHelloRequest) returns
  (SendHelloResponse);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now to handle it in the backend:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type sendHelloServer struct{}

// AddTodoService implements pb.AddTodoServer
func (s sendHelloServer) SendHello(ctx context.Context, in *pb.SendHelloRequest) (*pb.SendHelloResponse, error) {
	return &amp;amp;pb.SendHelloResponse{Response: &amp;quot;Hello&amp;quot; + in.Request}, nil
}

func main() {
  port := os.Getenv(&amp;quot;PORT&amp;quot;)
	host := os.Getenv(&amp;quot;HOST&amp;quot;)

	if len(port) == 0 {
		port = &amp;quot;3000&amp;quot;
	}

	if len(host) == 0 {
		host = &amp;quot;localhost&amp;quot;
	}

	lis, err := net.Listen(&amp;quot;tcp&amp;quot;, host+&amp;quot;:&amp;quot;+port)
	if err != nil {
		log.Fatalf(&amp;quot;failed to listen: %v&amp;quot;, err)
	}
	s := grpc.NewServer()
	pb.RegisterSendHelloServer(s, &amp;amp;sendHelloServer{})
	s.Serve(lis)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The response from the Go backend is now sent to your node.js glue-end which will forward it to the front-end. Now handle the response over in your front-end:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ipc.on(&#39;SendHelloResponse&#39;, (arg) =&amp;gt; {
  console.log(arg);
});

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will see &amp;ldquo;Hello Front-end&amp;rdquo; in your Electron&amp;rsquo;s console everytime you click the button! Amazing!&lt;/p&gt;

&lt;p&gt;I imagine you&amp;rsquo;re thinking something like:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Goddamn that was a LOT of effort for a Hello World&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sure it was. But now you have a cool framework for your Go app! You are Hello World-ing across three different layers! Its a self contained, cross platform, multi-language, HTTP2 streaming enabled microservice!&lt;/p&gt;

&lt;p&gt;The connection between the presentation layer and the backend is handled in Protobuf/gRPC format. Communication is very efficient compared to JSON, uses HTTP/2 and supports streaming, duplex communication and other cool things that I have only begun to explore.&lt;/p&gt;

&lt;p&gt;I would like to imagine that with all this setup you have a scalable system with which you can create cool apps like PopcornTime, Atom and others, except now you can do it with Go.&lt;/p&gt;

&lt;p&gt;And that&amp;rsquo;s pretty damn cool.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Life on the Dark Side</title>
      <link>http://nii236.github.io/technical-blog/post/2015-11-15-lifeAtTFG/</link>
      <pubDate>Sun, 15 Nov 2015 16:05:24 +0800</pubDate>
      
      <guid>http://nii236.github.io/technical-blog/post/2015-11-15-lifeAtTFG/</guid>
      <description>&lt;p&gt;So there I was.&lt;/p&gt;

&lt;p&gt;I joked that programming is like the dark side of career paths. Its tempting to do because it looks fun from the outside. It would have been a nice change from pushing paper and excel spreadsheets to vendors about why X does not adhere to standard Y. To be able to go to &amp;lsquo;work&amp;rsquo;, and that &amp;lsquo;work&amp;rsquo; means somewhere near civilisation. The concept is amazingly tempting, yet fraught with risk.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;As I write this, I&amp;rsquo;ve been working at TFG for the past 9 months! I have various things to say but my work here has been very fruitful.&lt;/p&gt;

&lt;p&gt;The majority of my time has been spent looking at the data analytics work that I was originally signed up to do. During slower times, however, I have been encouraged to help out with the others in developing web apps just like I hoped!&lt;/p&gt;

&lt;p&gt;I have one current project in production, and another still in staging. I&amp;rsquo;ve had experience in the following technologies, languages and frameworks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;d3.js&lt;/li&gt;
&lt;li&gt;react.js&lt;/li&gt;
&lt;li&gt;node.js&lt;/li&gt;
&lt;li&gt;koa.js&lt;/li&gt;
&lt;li&gt;Ruby on Rails&lt;/li&gt;
&lt;li&gt;Ruby&lt;/li&gt;
&lt;li&gt;RabbitMQ&lt;/li&gt;
&lt;li&gt;Protobuf&lt;/li&gt;
&lt;li&gt;Microservices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ve had to pick up a smattering of things, not limited to databases, ORMs, Continuous Integration tools or deployment tools.&lt;/p&gt;

&lt;p&gt;In my spare time I&amp;rsquo;ve continued to learn at a fast pace and have touched on the following things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Electron.js&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Blockchains&lt;/li&gt;
&lt;li&gt;Go/Golang&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ve even helped drive change in the stack that is used! React.js and webpack specifically. Before it was browserify and react-rails/coffeescript, but obsessive tendency to stay on the cutting edge and research the latest and greatest tooling has managed to see us enter a new era for javascript.&lt;/p&gt;

&lt;p&gt;I like to think that it is currently the &amp;lsquo;golden age&amp;rsquo; for javascript, mostly because of node as I&amp;rsquo;m sure you&amp;rsquo;re aware of. I&amp;rsquo;m glad to be in the industry now, and not 5 or 10 years ago where you&amp;rsquo;d be hacking away with LAMP and jquery. Or Silverlight. Or Java applets.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s the story so far anyway. I&amp;rsquo;ll update this every now and then to see my present thoughts at the time regarding my career change choice. But for now I am still optimistic and hopeful. At this point I feel that the future will continue to see me learn new things, be challenged and do things that I actually want to do.&lt;/p&gt;

&lt;p&gt;Finance notwithstanding of course. I&amp;rsquo;m about to lock in a large mortgage so I have been feeling the urge to return to engineering for the extra money. Let&amp;rsquo;s not hope it comes to that.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>